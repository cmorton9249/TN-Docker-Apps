services:
  dmz-proxy:
    image: nginx:stable
    container_name: dmz-proxy
    restart: unless-stopped
    networks:
      dmznet:
        ipv4_address: 192.168.50.230
    # macvlan: no published ports; nginx listens directly on 80/443 at its IP
    volumes:
      - /mnt/Main/AppData/nginx-proxy/conf/nginx.conf:/etc/nginx/nginx.conf:ro
      - /mnt/Main/AppData/nginx-proxy/conf/sites:/etc/nginx/conf.d:ro
      - /mnt/Main/AppData/nginx-proxy/certs:/etc/ssl/certs:ro
      - /mnt/Main/AppData/nginx-proxy/logs:/var/log/nginx

  acme:
    image: neilpang/acme.sh:latest
    container_name: acme
    restart: unless-stopped
    network_mode: "bridge"
    env_file:
      - /mnt/Main/AppData/nginx-proxy/acme/acme.env
    volumes:
      - /mnt/Main/AppData/nginx-proxy/acme:/acme.sh           # acme.sh HOME
      - /mnt/Main/AppData/nginx-proxy/certs:/certs            # where nginx reads certs
      - /var/run/docker.sock:/var/run/docker.sock:ro    # to reload nginx on renew
    entrypoint: ["/bin/sh","-c"]
    command: >
      sh -c "set -e;
      acme.sh --set-default-ca --server letsencrypt;
      if ! acme.sh --list | grep -q 'plex.teammorton.net'; then
        acme.sh --issue --dns dns_cf -d plex.teammorton.net --keylength ec-256;
        acme.sh --install-cert -d plex.teammorton.net --ecc
          --fullchain-file /certs/fullchain.pem
          --key-file /certs/privkey.pem
          --reloadcmd 'docker exec dmz-proxy nginx -s reload';
      fi;
      crond -f -d 8"

networks:
  dmznet:
    external: true
